[project]
name = "outcast"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.19",
    "pandas>=2.3.0",
    "scikit-learn>=0.22.0",
    "typing-extensions>=4.14.1",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pandas-stubs>=2.3.0.250703",
    "pytest>=8.4.1",
    "ruff>=0.12.2",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
preview = true
ignore = [
    "COM812",  # missing-trailing-comma
    "CPY001",  # Missing copyright notice at top of file
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D203",    # blank line required before class docstring
    "D211",    # no-blank-line-before-class
    "D213",    # multi-line-summary-second-line
    "EM101",   # raw-string-in-exception
    "FIX002",  # line-contains-todo
    "ISC001",  # Conflicts with formatter ruff
    "TD002",   # Missing author in TODO `# TODO(<author_name>): ...`
    "TD003",   # missing-todo-link
    "TRY003",  # raise-vanilla-args
    "DOC201",  # docstring-missing-returns
    "DOC501",  # docstring-missing-exception
    "N803",    # invalid-argument-name (doesn't allow uppercase, such as "X")
    "N806",    # non-lowercase-variable-in-function
    "EM102",   # f-string-in-exception
    "D415",    # First line should end with a period, question mark, or exclamation point
    "D400",    # First line should end with a period
    "D107",    # __init__ mandatory docstring
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
    "S101",    # asserts allowed in tests...
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "D103",    # Missing docstring in public function
]

[tool.mypy]
strict = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = "sklearn.*"
ignore_missing_imports = true



